using System;
using System.IO;
using System.Threading;

namespace FileOpen
{
    class Program
    {
        static void Main(string[] args)
        {
            string name = "log.txt";

            while (true)
            {
                Console.WriteLine("Выберите действие:");
                Console.WriteLine("1. Создать файл и записать данные");
                Console.WriteLine("2. Прочитать данные из файла");
                Console.WriteLine("3. Записать данные параллельно");
                Console.WriteLine("4. Удалить файл");
                Console.WriteLine("5. Выход");
                int choice = int.Parse(Console.ReadLine());
                switch (choice)
                {
                    case 1:
                        Create(name);
                        break;
                    case 2:
                        Read(name);
                        break;
                    case 3:
                        Write(name);
                        break;
                    case 4:
                        Delete(name);
                        break;
                    case 5:
                        Console.WriteLine("Вы завершили программу");
                        return;
                    default:
                        Console.WriteLine("Ошибка. Выбирайте что вам предлогают");
                        break;
                }
            }
        }
        static void Create(string name)
        {
            try
            {
                using (StreamWriter writer = new StreamWriter(name))
                {
                    for (int i = 0; i < 10; i++)
                    {
                        writer.WriteLine($"Строка {i + 1}: {DateTime.Now}");
                    }
                }
                Console.WriteLine("Файл создан и данные записаны.");
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Ошибка при записи в файл: {ex.Message}");
            }
        }
        static void Read(string name)
        {
            try
            {
                using (StreamReader reader = new StreamReader(name))
                {
                    string line; 
                    Console.WriteLine("Содержимое файла:");
                    while ((line = reader.ReadLine()) != null)
                    {
                        Console.WriteLine(line);
                    }
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Ошибка при чтении файла: {ex.Message}");
            }
        }
        static void Write(string name)
        {
            try
            {
                using (StreamWriter writer = new StreamWriter(name, true))
                {
                    Thread write = new Thread(() =>
                    {
                        for (int i = 0; i < 5; i++)
                        {
                            writer.WriteLine($"Поток 1: {DateTime.Now}");
                        }
                    });
                    Thread write2 = new Thread(() =>
                    {
                        for (int i = 0; i < 5; i++)
                        {
                            writer.WriteLine($"Поток 2: {DateTime.Now}");
                        }
                    });
                    write.Start();
                    write2.Start();
                    write.Join();
                    write2.Join();
                }
                Console.WriteLine("Данные записаны параллельно.");
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Ошибка при записи в файл: {ex.Message}");
            }
        }
        static void Delete(string name)
        {
            try
            {
                if (File.Exists(name)) 
                {
                    File.Delete(name);
                    Console.WriteLine("Файл удален.");
                }
                else
                {
                    Console.WriteLine("Файл не найден.");
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Ошибка при удалении файла: {ex.Message}");
            }
        }
    }
}
